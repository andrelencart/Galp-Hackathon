  
services:
  backend:
    build:
      context: ./Backend
    env_file:
      - .env
    environment:
      FLASK_APP: database_handlers/main.py
      FLASK_ENV: development
      DB_HOST: db
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
    ports:
      - "5000:5000"
    networks:
      - my_custom_network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: gunicorn -b 0.0.0.0:5000 database_handlers.main:app
    volumes:
      - image_data:/data/images

  frontend:
    build:
       context: ./frontend/my-project
    ports:
      - "3000:3000"
    networks:
      - my_custom_network
    restart: unless-stopped


  db:
    image: mysql:8.0
    environment:
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${DB_USER}

    networks:
      - my_custom_network
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/hackaton_galp_db.sql:/docker-entrypoint-initdb.d/hackaton_galp_db.sql
    expose:
      - "3306"
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 3
    restart: unless-stopped
    

volumes:
  mysql_data:
  image_data:

networks:
  my_custom_network:
    driver: bridge